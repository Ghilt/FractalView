<resources>
    <string name="app_name">FractalViewer</string>

    <string name="general_accept">Accept</string>
    <string name="general_ok">OK</string>
    <string name="general_save">Save</string>
    <string name="general_yes">Yes</string>
    <string name="general_cancel">Cancel</string>
    <string name="general_not_enough_input_error">Not enough input</string>

    <string name="ancestor_configuration_confirm">Confirm</string>
    <string name="ancestor_config_plus">+</string>
    <string name="ancestor_config_minus">-</string>
    <string name="placeholder_hello">Hello!</string>
    <string name="placeholder_default_operator">\%</string>
    <string name="placeholder_select_operator">\?</string>
    <string name="placeholder_select_operand">\?</string>
    <string name="placeholder_select_numeric_operand">Numeric operand</string>
    <string name="placeholder_target_text"> The above will determine the next cell</string>

    <string name="accessibility_play_button">play fractal button</string>
    <string name="accessibility_edit_button">edit fractal button</string>
    <string name="accessibility_delete_button">delete fractal button</string>
    <string name="accessibility_accept_button">accept</string>
    <string name="accessibility_increase">increase</string>
    <string name="accessibility_decrease">decrease</string>

    <string name="canvas_start_iteration">Start</string>
    <string name="canvas_save_configuration">Save</string>
    <string name="canvas_save_configuration_feedback">Saved fractal</string>
    <string name="canvas_stop_iteration">Stop</string>
    <string name="canvas_iteration_count">Iteration: %1d</string>

    <string name="node_list_empty_text">To begin configuring your pattern select one or many tiles in the grid and add a calculation.</string>
    <string name="node_list_create_conditional_part1">if (</string>
    <string name="node_list_create_conditional_part2">)</string>
    <string name="node_list_create_conditional_part3">else</string>
    <string name="node_list_group_operator">%1s (</string>
    <string name="node_list_sum_all_end_bracket">) %1s</string>

    <string name="create_node_inline_if">if</string>
    <string name="create_node_inline_then">then</string>
    <string name="create_node_inline_else">else</string>

    <string name="config_node_creation_group_node_header">Create group operation node</string>

    <string name="compact_picker_dialog_header_operand">Select operand</string>
    <string name="compact_picker_dialog_header_operator">Select operator</string>

    <string name="operator_description_sum">Sum over inputs.</string>
    <string name="operator_description_product">Take product of inputs.</string>
    <string name="operator_description_max">Maximum. Take largest value.</string>
    <string name="operator_description_min">Minimum. Take smallest value.</string>
    <string name="operator_description_addition">Addition.</string>
    <string name="operator_description_subtraction">Subtraction.</string>
    <string name="operator_description_multiplication">Multiplication</string>
    <string name="operator_description_division">Integer division.</string>
    <string name="operator_description_exponent">Raise by some power.</string>
    <string name="operator_description_modulo">Take the modulo.</string>
    <string name="operator_description_equals">Return 1 if the inputs are exactly equal.</string>
    <string name="operator_description_not_equal">Return 1 if the inputs are not equal.</string>
    <string name="operator_description_almost_equals">Return 1 if the inputs are either both 0 or both not 0.</string>
    <string name="operator_description_not_almpst_equals">Return 1 if one input is 0 and the other is not.</string>
    <string name="operator_description_less_than">Return 1 if the first input is smaller than the second.</string>
    <string name="operator_description_greater_than">Return 1 if the first input is larger than the second.</string>
    <string name="operator_description_less_equal_than">Return 1 if the first input is smaller than or equal to the second.</string>
    <string name="operator_description_greater_equal_than">Return 1 if the first input is greater than or equal to the second.</string>
    <string name="operator_description_and">Return 1 if both operands are not 0.</string>
    <string name="operator_description_or">Return 1 if one or both operands are not 0.</string>
    <string name="operator_description_xor">Return 1 if exactly one operand is not 0.</string>

    <string name="dialog_delete_fractal_title">Are you sure you want to remove %s?</string>
    <string name="dialog_save_fractal_title">Choose a name for this fractal</string>
    <string name="dialog_save_fractal_hint">Name</string>

    <string name="temp_close_x">✕</string>

    <string name="start_welcome">Maths</string>
    <string name="start_configure_button">Create</string>
    <string name="start_load_configuration_button">Load</string>
    <string name="start_load_configuration_button_edit">Edit</string>
    <string name="start_load_configuration_button_show">Show</string>
    <string name="start_load_configuration_button_delete">Delete</string>
    <string name="start_load_configuration_title">Load previously created configuration</string>
    <string name="start_load_configuration_no_saved">You do not have any saved configs</string>
    <string name="start_tutorial_button">Explanation</string>

    <string name="start_settings">Settings</string>
    <string name="settings_tutorial">Tutorial</string>
    <string name="settings_operator_glossary">Operator glossary</string>
    <string name="settings_credits">Third party libraries</string>
    <string name="settings_credits_gson">Gson</string>
    <string name="settings_first_time_user_flag_reset">First time user flag reset</string>
    <string name="settings_tutorial_step_1">Define mathematical and logical rules to make a triangular fractal pattern:</string>
    <string name="settings_tutorial_step_2">Each cell represents a numerical value. A cell becomes filled(black) if the numerical value is different from zero. Each cell in the triangle depends on the cells above it.</string>
    <string name="settings_tutorial_step_3_summation_label">Summation example:</string>
    <string name="settings_tutorial_step_3">To begin creating a fractal you first need to select which cells that shall affect the next cell in line for calculation:</string>
    <string name="settings_tutorial_step_4">Above is an example of how the next cell value would be calculated if you chose to take the sum in a particular pattern of previous cells. The above would result in ever increasing values, and won\'t make for a good fractal.</string>
    <string name="settings_tutorial_step_5">As can be noticed by experimenting in the demo the initial cell is always filled with a value of 1, this is not currently configurable in the app. \n\nThat will conclude this brief tutorial. I hope this points you in the right direction when trying to understand this app. You can find a list of all available operators in the settings.</string>

    <string name="settings_tutorial_step_4_demo_label">Interactive demo</string>
    <string name="settings_tutorial_step_4_demo_label_sum">Below is a simplified example with a small 1x3 grid. Click to select/deselect which cells to take the sum of:</string>
    <string name="settings_tutorial_step_4_demo_a_sum">A = Σ( </string>
    <string name="settings_tutorial_step_4_demo_b">B = </string>
    <string name="settings_tutorial_step_4_demo_a_sum_end">)</string>
    <string name="settings_tutorial_step_4_demo_operator">A \% B = </string>
    <string name="settings_tutorial_step_4_demo_operand_label">Select a integer to use:</string>
    <string name="settings_tutorial_step_4_demo_default_operand">2</string>
    <string name="settings_tutorial_step_4_demo_result_label">Below the input will be used with the modulo operator which can create nice fractal patterns all on its own. The tricky thing to understand is what the sum is in each step, take a moment to ponder.</string>

    <string name="settings_glossary_group_operator_title">Group operators</string>
    <string name="settings_glossary_group_operator_description">A group operator take several integer inputs and then transform them in some way. </string>
    <string name="settings_glossary_mathematical_operator_title">Mathematical operators</string>
    <string name="settings_glossary_mathematical_operator_description">These operators is the standard mathematical operators. Take two inputs and perform a mathematical operation on them to get an output.</string>
    <string name="settings_glossary_logical_operator_title">Logic operators</string>
    <string name="settings_glossary_logical_operator_description">The logic operator takes integers as input but treats them as boolean values. A zero is interpreted as false and everything else as true. The output from these operators is always either 0 or 1.</string>

    <string name="settings_third_party_libraries_title">Third party libraries</string>

</resources>
